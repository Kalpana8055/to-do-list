# Use an official Node.js runtime as a parent image for building
FROM node:18-alpine as builder

# Set the working directory in the container
WORKDIR /app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Build the React app
RUN npm run build

# Use Nginx to serve the built React app (a lightweight web server)
FROM nginx:alpine

# Copy the build output from the builder stage to Nginx's HTML directory
COPY --from=builder /app/build /usr/share/nginx/html

# Copy a custom Nginx configuration (optional, but good for single-page apps)
# This prevents issues with direct refreshes on routes other than '/'
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port 80 for the frontend
EXPOSE 80

# Command to start Nginx
CMD ["nginx", "-g", "daemon off;"]